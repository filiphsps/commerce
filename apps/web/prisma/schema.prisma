datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

generator client {
    provider = "prisma-client-js"
}

model AccountEmail {
    id        String   @id @default(cuid())
    email     String   @unique
    account   Account? @relation(fields: [accountId], references: [id])
    accountId String?
}

model Account {
    id          String             @id @default(cuid())
    name        String?
    gh_username String?
    emails      AccountEmail[]
    createdAt   DateTime           @default(now())
    updatedAt   DateTime           @updatedAt
    sessions    Session[]
    shops       ShopCollaborator[]
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    accountId    String
    expires      DateTime
    account      Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)

    @@index([accountId])
}

model ShopCollaborator {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    shop      Shop     @relation(fields: [shopId], references: [id])
    shopId    String
    account   Account? @relation(fields: [accountId], references: [id])
    accountId String?

    @@index([shopId])
    @@index([accountId])
}

model Shop {
    id               String             @id
    name             String
    domain           String             @unique
    alternateDomains String[]           @unique @default([])
    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt
    collaborators    ShopCollaborator[]
}
