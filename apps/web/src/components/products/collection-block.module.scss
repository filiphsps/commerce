@import '_globals.scss';

.container {
    position: relative;
    width: 100%;
    height: 100%;
    min-width: 100%;
    min-height: 36.5rem;
    scrollbar-color: var(--color-block-black) var(--color-block);
    scrollbar-width: thin;

    .content {
        display: grid;
        gap: var(--block-spacer-large);
        grid-auto-columns: 1fr;
        grid-auto-rows: 1fr;
        grid-template-columns: 1fr 1fr;

        @media (min-width: $breakpoint-mobile) {
            justify-content: start;
            gap: var(--block-spacer);
            grid-template-columns: repeat(
                auto-fill,
                minmax(calc(var(--component-product-card-width) + var(--block-padding)), 1fr)
            );
        }

        .viewAll {
            position: relative;
            flex: 1 auto;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            min-width: var(--component-product-card-width);
            height: 100%;
            padding: var(--block-padding) var(--block-padding-large);
            scroll-snap-align: center;
            border-radius: var(--block-border-radius);
            background-color: var(--accent-secondary);
            color: var(--accent-secondary-text);
            border: calc(var(--block-border-width) * 1.5) solid var(--accent-secondary);
            transition:
                150ms ease-in-out color,
                150ms ease-in-out background-color,
                150ms ease-in-out border-color;

            line-height: normal;
            font-size: 2rem;
            font-weight: 600;
            text-align: center;

            text-underline-offset: var(--block-border-width);
            text-underline-position: auto;

            &:is(:hover, :active, :focus, :focus-within) {
                background-color: var(--accent-secondary-light);
                border-color: var(--accent-primary-dark);
                text-decoration: underline dotted 0.125em;

                &,
                a {
                    color: var(--accent-primary-dark) !important;
                }
            }
        }
    }

    &.skeleton {
        --product-card-color-background: var(--color-bright);
        --product-card-color-image-background: var(--color-block);
    }

    &.horizontal {
        margin: 0 calc(var(--block-padding-large) * -1);
        width: calc(100% + var(--block-padding-large) * 2);

        .content {
            display: grid;
            overflow-x: scroll;
            grid-template-columns: repeat(auto-fill, minmax(1fr, var(--component-product-card-width)));
            grid-auto-columns: 1fr;
            grid-auto-rows: 1fr;
            grid-auto-flow: column;

            padding: var(--block-padding-large);

            scroll-snap-type: x mandatory;
            scroll-behavior: smooth;

            // https://stackoverflow.com/a/30533339/3142553
            transform: translateZ(0);
            -webkit-transform: translateZ(0);
            -moz-backface-visibility: hidden;
            -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
            will-change: scroll-position, transform;

            // Attempt at fixing performance on iOS/iPadOS webkit
            -webkit-overflow-scrolling: touch;
        }

        &.skeleton {
            .content {
                display: flex;
                overflow-x: hidden;
            }
        }
    }
}
